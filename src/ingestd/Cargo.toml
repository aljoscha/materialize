[package]
name = "ingestd"
description = "Distributed ingest/persist component of Materialize."
version = "0.9.9-dev"
edition = "2018"
publish = false
authors = ["Materialize, Inc."]
license = "proprietary"
default-run = "ingestd"

[dependencies]
anyhow = "1.0.52"
askama = { version = "0.11.0", default-features = false, features = ["config", "serde-json"] }
async-trait = "0.1.52"
atty = "0.2.14"
backtrace = "0.3.63"
build-info = { path = "../build-info" }
cfg-if = "1.0.0"
chrono = { version = "0.4.0", default-features = false, features = ["std"] }
clap = { version = "3.0.0", features = ["wrap_help", "env", "derive"] }
compile-time-run = "0.2.12"
coord = { path = "../coord" }
crossbeam-channel = "0.5.1"
dataflow = { path = "../dataflow" }
dataflow-types = { path = "../dataflow-types" }
differential-dataflow = { git = "https://github.com/TimelyDataflow/differential-dataflow.git" }
fail = { version = "0.5.0", features = ["failpoints"] }
futures = "0.3.19"
hex = "0.4.3"
hyper = { version = "0.14.16", features = ["http1", "server"] }
hyper-openssl = "0.9.1"
include_dir = "0.7.2"
ingest-model = { path = "../ingest-model" }
itertools = "0.10.3"
krb5-src = { version = "0.3.1", features = ["binaries"] }
lazy_static = "1.4.0"
libc = "0.2.112"
log = "0.4.13"
mz-http-proxy = { path = "../http-proxy", features = ["reqwest"] }
mz-process-collector = { path = "../mz-process-collector" }
nix = "0.23.1"
num_cpus = "1.13.1"
openssl = { version = "0.10.38", features = ["vendored"] }
openssl-sys = { version = "0.9.72", features = ["vendored"] }
ore = { path = "../ore" }
os_info = "3.0.9"
pid-file = { path = "../pid-file" }
pgwire = { path = "../pgwire" }
prof = { path = "../prof" }
prometheus = { git = "https://github.com/MaterializeInc/rust-prometheus.git", default-features = false }
rdkafka-sys = { git = "https://github.com/fede1024/rust-rdkafka.git", features = ["cmake-build", "libz-static"] }
repr = { path = "../repr" }
reqwest = { version = "0.11.8", features = ["json"] }
rlimit = "0.6.2"
semver = "1.0.4"
serde = { version = "1.0.133", features = ["derive"] }
serde_json = "1.0.74"
shell-words = "1.0.0"
sql = { path = "../sql" }
sysctl = "0.4.3"
sysinfo = "0.22.4"
tempfile = "3.2.0"
timely = { git = "https://github.com/TimelyDataflow/timely-dataflow", default-features = false, features = ["bincode"] }
tokio = { version = "1.15.0", features = ["sync"] }
tokio-openssl = "0.6.3"
tokio-stream = { version = "0.1.8", features = ["net"] }
tracing = "0.1.29"
tracing-subscriber = "0.3.5"
url = "2.2.2"
uuid = "0.8.2"

[target.'cfg(not(target_os = "macos"))'.dependencies]
# According to jemalloc developers, `background_threads` should always be
# enabled, except in "esoteric" situations that don't apply to Materialize
# (Namely: if the application relies on new threads not being created for whatever reason)
#
# See: https://github.com/jemalloc/jemalloc/issues/956#issuecomment-316224733
prof = { path = "../prof", features = ["jemalloc"] }
tikv-jemallocator = { version = "0.4.1", features = ["profiling", "stats", "unprefixed_malloc_on_supported_platforms", "background_threads"] }

[dev-dependencies]

[build-dependencies]
anyhow = "1.0.52"
cc = "1.0.72"
